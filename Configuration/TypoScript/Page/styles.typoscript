# CSS inclusions and inline dynamic parametres from template constants
	config {
		concatenateCss = 1
		compressCss = 1
		removePageCss = 1
	}

	["{$microtemplate.pagelistIsLoaded}" == "1"]
		page.includeCSS.pagelistOverride = EXT:microtemplate/Extensions/pagelist/Resources/Public/Styles/pagelist.css
	[END]

	["{$microtemplate.personnelIsLoaded}" == "1"]
		page.includeCSS.personnelOverride = EXT:microtemplate/Extensions/personnel/Resources/Public/Styles/personnel.css
	[END]

	[page["backend_layout"] == "pagets__home"]
		page.includeCSS.menu = EXT:microtemplate/Resources/Public/Styles/Page/menu.css
		page.includeCSS.languageMenu = EXT:microtemplate/Resources/Public/Styles/Page/languagemenu.css
	[END]

	page.includeCSS.pagination = EXT:microtemplate/Resources/Public/Styles/Page/pagination.css

	page {
		includeCSS {
			microtemplate = {$microtemplate.mainCSS}
			forms = EXT:microtemplate/Resources/Public/Styles/Page/forms.css
			googleFonts = {$microtemplate.google-font-link}
			googleFonts.external = 1
			googleFonts.media = all
		}
		headerData {
      # styles to set content colours from constants
			1001 = TEXT
			1001.value (
				<style>
					body {font-family: {$microtemplate.main-font-family}; color: {$microtemplate.text-default}; background-color: {$microtemplate.body-background}}

					h1,h2,h3,h4,.ce-bodytext .headerFont,  .form-group>label, .control-label, #menu nav {font-family: {$microtemplate.header-font-family}, {$microtemplate.main-font-family}}
					#header.scrolled, #header.force-bg {background-color: {$microtemplate.header-bg}}

				/* page containers */
					.pageWidth {max-width: {$microtemplate.pageWidth}}
					.contentWidth {max-width: {$microtemplate.contentWidth}}
					.subpageContentWidth {max-width: {$microtemplate.subpageContentWidth}}

				/* links and buttons */
					#menu a {color: {$microtemplate.text-default}}
					#menu>nav>ul>li, #languagemenu>nav>ul {border-color: {$microtemplate.text-default}}
					.hmbrgr i {background: {$microtemplate.text-default}}
					a, a:visited, #menu a:hover, #menu .active a {color: {$microtemplate.accentColor}}
					.btn:visited, .btn, .closelink:hover i, a.hmbrgr:hover i {background-color: {$microtemplate.accentColor}}
					.btn:visited, .btn, .btn:disabled {border-color: {$microtemplate.accentColor}}
					.btn:hover, .btn:disabled {color: {$microtemplate.accentColor}}

				/* content sections */
					.ge-section {background-color: {$microtemplate.ge-section.bg-default}}
					.ge-section.bg-light {background-color: {$microtemplate.ge-section.bg-light}}
					.ge-section.bg-dark {background-color: {$microtemplate.ge-section.bg-dark}; color: {$microtemplate.text-light}}
					.ge-section.text-light {color: {$microtemplate.text-light}}
          .ge-section.text-light input, .ge-section.text-light select, .ge-section.text-light textarea {border-color: {$microtemplate.darkMode-text-light}}
					.ge-section.text-dark {color: {$microtemplate.text-dark}}
          .ge-section.text-dark input, .ge-section.text-dark select, .ge-section.text-dark textarea {border-color: {$microtemplate.darkMode-text-dark}}
					.ge-section .videobuttons svg .a, .ge-section .videobuttons svg .st0, .ge-section .videobuttons svg rect {fill:{$microtemplate.text-default}}
					.ge-section.text-light .videobuttons  .a, .ge-section.text-light .videobuttons polygon.st0, .ge-section.text-light .videobuttons rect {fill:{$microtemplate.text-light}}
					.ge-section.text-dark .videobuttons  .a, .ge-section.text-dark .videobuttons polygon.st0, .ge-section.text-dark .videobuttons rect {fill:{$microtemplate.text-dark}}

				/* accordion */
					a.ge-accordion-section-title, a.ge-accordion-section-title:visited {color: {$microtemplate.text-default}}
					a.ge-accordion-section-title:hover {color: {$microtemplate.accentColor}}
					.ge-accordion-section-title::after, .ge-accordion-section-title::before {background-color: {$microtemplate.text-default}}
					.ge-accordion-section-title:hover::after, .ge-accordion-section-title:hover::before {background-color: {$microtemplate.accentColor}}

				/* sub pages */
					.subpage {color: {$microtemplate.text-default}}
					.subpage-body {background-color: {$microtemplate.body-background}}
					.closelink i {background: {$microtemplate.text-default}}

				/* language menu */
					#languagemenu li a {color: {$microtemplate.text-default}}

				/* forms */
					input, select, textarea {font-family: {$microtemplate.main-font-family}; color: {$microtemplate.text-default}; border-color: {$microtemplate.text-default}; -webkit-text-fill-color: {$microtemplate.text-default};}
					i.validation-icon svg path {fill: {$microtemplate.text-default}}

				/* ext:youtubevideo */
					.youtubeVideo:hover .customplaybutton polygon {fill: {$microtemplate.accentColor}}

				/* ext:pagelist styles */
					.pagelist .info, .pagelist .abstract {color: {$microtemplate.text-default}}

				/* pagination */
					 ul.pagination>li>a {boreder-color: {$microtemplate.accentColor}}
					 ul.pagination>li.current {$microtemplate.text-default}}

				/* ext:personnel */
					.personnel svg path {fill: {$microtemplate.text-default}}
					.ge-section.bg-dark .personnel svg path {fill: {$microtemplate.text-light}}
					.ge-section.text-light .personnel svg path {fill: {$microtemplate.text-light}}
					.ge-section.text-dark .personnel svg path {fill: {$microtemplate.text-dark}}
				</style>
			)
		}
	}
	["{$microtemplate.nontransparent-header}" != "0"]
		page.headerData {
			1002 = TEXT
			1002.value (
				<style>
					#header {background-color: {$microtemplate.header-bg}
				</style>
			)
		}
	[END]

  ["{$microtemplate.fade-in-content}" == "1"]
    page.includeCSS.fadeIncontent = EXT:microtemplate/Resources/Public/Styles/Page/fadeInContent.css
  [END]

	["{$microtemplate.customCSS}" != "0"]
		page.includeCSS.customlCSS = {$microtemplate.customCSS}
	[END]

	["{$microtemplate.ge-section-angeled-edges}" == "1"]
		page.includeCSS.enable-ge-section-angeled-edges = EXT:microtemplate/Resources/Public/Styles/Page/ge-section-angeled-edges.css
	[END]
