config {
  cache_period = {$microtemplate.cacheControlMaxAge}
  absRefPrefix = auto
  forceAbsoluteUrls = 1
  sendCacheHeaders=1
  spamProtectEmailAddresses = -1
  spamProtectEmailAddresses_atSubst = @
  spamProtectEmailAddresses_lastDotSubst = .
}
[compatVersion("11.5")]
   config.baseURL = {$microtemplate.domainName}
[end]

# header data
page {
	config {
  	headerComment (
*************************************************************
*   Microtemplate: https://mirotemplate.t3brightside.com    *
*************************************************************
  	)
  }
	meta.viewport.value = width=device-width, initial-scale=1.0
	meta.keywords.data = page:keywords
	meta.description.data = page:description
}

# fluidtemplat settings and variables
page = PAGE
page {
	typeNum = 0
	10 = FLUIDTEMPLATE
	10 {
    partialRootPaths.10 = EXT:microtemplate/Resources/Private/Partials/
    partialRootPaths.20 = {$microtemplate.partialRootPath}

    templateRootPaths.10 = EXT:microtemplate/Resources/Private/Templates/
    templateRootPaths.20 = {$microtemplate.templateRootPath}
# site config
    dataProcessing.5 = TYPO3\CMS\Frontend\DataProcessing\SiteProcessor
    dataProcessing.5.as = site
# page media files
    dataProcessing.10 = TYPO3\CMS\Frontend\DataProcessing\FilesProcessor
    dataProcessing.10.references.fieldName = media
# main menu
    dataProcessing.20 = TYPO3\CMS\Frontend\DataProcessing\DatabaseQueryProcessor
    dataProcessing.20 {
      table = tt_content
      pidInList.field = uid
      where = colPos=0 AND sectionIndex=1
      orderBy = sorting
      as = sectionMenu
    }
# language menu
    dataProcessing.30 = TYPO3\CMS\Frontend\DataProcessing\LanguageMenuProcessor
    dataProcessing.30 {
      languages = auto
      as = languageMenu
    }

		variables {
# logo settings
      logo = SVG
      logo.renderMode = inline
      logo.src = {$microtemplate.logoFile}
# needed for if home is not in page tree root level
      rootPageId = TEXT
      rootPageId.value = {$microtemplate.rootPageId}
# logo file location
			logoFile = TEXT
			logoFile.value = {$microtemplate.logoFile}
# logo file location
			titleChangeScroll = TEXT
			titleChangeScroll.value = {$microtemplate.title-change-scroll}
# default page content
			contentDefault = COA
			contentDefault {
				10 = LOAD_REGISTER
				10.maxImageWidth = {$microtemplate.pageWidth}
				20 < styles.content.get
				20.select.where = colPos = 0
				30 = RESTORE_REGISTER
			}
      currentURL = TEXT
      currentURL.data = getIndpEnv:TYPO3_REQUEST_URL


# override automatic page title with content element if available
			contentHeader = CONTENT
			contentHeader.table = tt_content
			contentHeader {
				select {
	  	    orderBy = sorting
					where = colPos=5
				}
				renderObj = COA
				renderObj {
			  	10 = TEXT
					10.stdWrap.field = header
					10.stdWrap.wrap = |
				}
			}
		}
    templateName.stdWrap.cObject = CASE
    templateName.stdWrap.cObject {
      key.data = pagelayout
      key.data = levelfield:-1, backend_layout_next_level, slide
      key.override.field = backend_layout
      default = TEXT
      default.value = Home
      pagets__home = TEXT
      pagets__home.value = Home
      pagets__sub = TEXT
      pagets__sub.value = Sub
      pagets__article = TEXT
      pagets__article.value = Article
    }
  }
}

# mobile menu content page
menucontent = CONTENT
menucontent {
  table = tt_content
  select {
    pidInList = {$microtemplate.mobilemenu-content-page}
    orderBy = sorting
  }
  renderObj =< tt_content
}
# enable page authors if ext:personnel is loaded
["{$microtemplate.personnelIsLoaded}" == "1"]
  page.10.dataProcessing {
    40 = TYPO3\CMS\Frontend\DataProcessing\DatabaseQueryProcessor
    40 {
      table = tx_personnel_domain_model_person
      uidInList.field = tx_personnel_authors
      pidInList = 0
      as = authors
      dataProcessing {
        10 = TYPO3\CMS\Frontend\DataProcessing\FilesProcessor
        10.references.table = tx_personnel_domain_model_person
        10.references.fieldName = images
        10.as = authorimages
      }
    }
  }
[END]
